---ASSIGNMENT2---;

use mavenmovies;

...Q1.Retrieve the total number of rentals made in the Sakila database..;

select  * from rental;
Select COUNT(*) from rental;

--Q2. Find the average rental duration (in days) of movies rented from the Sakila database.;

select  * from FILM;
select avg(rental_duration) from film ;

--Q3.Display the first name and last name of customers in uppercase.;

select upper(first_name) , upper (last_name ) from customer;

--Q4.Extract the month from the rental date and display it alongside the rental ID.;

select rental_id , Month(rental_date) from rental;

--Q5.Retrieve the count of rentals for each customer (display customer ID and the count of rentals).;

SELECT customer_id, COUNT(*) AS total_rentals FROM rental GROUP BY customer_id;

--Q6.Find the total revenue generated by each store.;

SELECT SUM(TOTAL_SALES) AS REVENUE FROM sales_by_store ;

--Q7.Display the title of the movie, customer s first name, and last name who rented it.;

select title, first_name , last_name from film  inner join inventory on film.film_id = inventory.film_id 
inner join rental on inventory.inventory_id = rental.inventory_id
inner join customer on rental.customer_id = customer.customer_id;


---Q.8.Retrieve the names of all actors who have appeared in the film "Gone with the Wind."..;

select  "Gone with the Wind" , first_name, last_name from actor inner join film_actor on actor.actor_id = film_actor.actor_id 
inner join film on film_actor.film_id = film.film_id;

---Q.9.Determine the total number of rentals for each category of movies..;

select count(rental_id), category_id from film_category inner join inventory on film_category.film_id = inventory.film_id 
inner join rental on inventory.inventory_id = rental.inventory_id group by category_id;

---Q.10.Find the average rental rate of movies in each language..;

select name, avg(rental_rate ) from film 
inner join language on film.language_id = language.language_id group by name;

--	Q11. Retrieve the customer names along with the total amount they've spent on rentals..;

select concat(first_name," " ,last_name) as customer_name, sum(amount) from customer
inner join payment on customer.customer_id = payment.customer_id
 inner join rental on payment.customer_id = rental.customer_id 
 group by customer_name;
 
 --Q12.List the titles of movies rented by each customer in a particular city (e.g., 'London').;

select concat(first_name," " ,last_name) as customer_name ,  city , title from film
inner join inventory on film.film_id = inventory.film_id
inner join rental on inventory.inventory_id = rental.inventory_id
inner join customer on rental.customer_id = customer.customer_id
inner join address on customer.address_id = address.address_id
 inner join city on address.city_id = city.city_id;
 
 ------or------;
 select  city ,count( title) from film
inner join inventory on film.film_id = inventory.film_id
inner join rental on inventory.inventory_id = rental.inventory_id
inner join customer on rental.customer_id = customer.customer_id
inner join address on customer.address_id = address.address_id
 inner join city on address.city_id = city.city_id where city = 'london' group by city;
 
 
---Q.13. Display the top 5 rented movies along with the number of times they have been rented.; 
 
SELECT title AS movie_title, COUNT(rental_id) AS rental_count
FROM film
INNER JOIN inventory ON film.film_id = inventory.film_id
INNER JOIN rental ON inventory.inventory_id = rental.inventory_id
GROUP BY movie_title ORDER BY rental_count DESC LIMIT 5;

--Q14.Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).;

SELECT customer.customer_id, first_name, last_name
FROM customer
inner join rental ON customer.customer_id = rental.customer_id
inner join inventory ON rental.inventory_id = inventory.inventory_id
WHERE inventory.store_id IN (1, 2)
GROUP BY customer.customer_id, customer.first_name, customer.last_name
HAVING COUNT(DISTINCT inventory.store_id) = 2;
 
 --------end-----;
 
 



